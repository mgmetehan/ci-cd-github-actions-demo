name: CI/CD Actions

on: # Tetikleyici
  push: # Push edildiginde tetikler
    branches: [ master ]  # Branch push edildiginde tetikler
  pull_request:
    branches: [ master ]  # Pull request acildiginda tetikler

jobs:
  test: # Test isimli bir is akisi
    name: Unit Test
    runs-on: ubuntu-latest # Ubuntu tabanli bir ortamda calisacak
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Kodu cekmek icin checkout aksiyonunu kullaniyoruz

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # JDK 17'yi yapilandir
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml  # Maven ile derle

      - name: Cache local Maven repository
        uses: actions/cache@v3 # Maven paketlerini onbellege al
        with:
          path: ~/.m2/repository # Maven paketlerinin bulundugu dizin
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} # Maven paketlerini onbellege alirken kullanilacak anahtar
          restore-keys: ${{ runner.os }}-maven- # Maven paketlerini onbelleginden geri yuklerken kullanilacak anahtar

      - name: Run Tests
        run: mvn -B test  # Testleri calistir

  docker:
    name: Build and Deploy Spring Boot App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: 'maven'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build App
        run: mvn -B package --file pom.xml -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/githubactions:latest

